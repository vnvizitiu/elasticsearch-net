<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Default Version numbers -->
    <CurrentVersion>0.0.0-bad</CurrentVersion>
    <CurrentAssemblyVersion>0.0.0</CurrentAssemblyVersion>
    <CurrentAssemblyFileVersion>0.0.0.0</CurrentAssemblyFileVersion>
    <!-- 'dotnet xunit' does a build but has no way to pass properties or prevent build so we snoop for TRAVIS here
    Ideally we handle this in the FAKE script (which we do for 'dotnet build')
    TODO too lazy to write and test a <CHOOSE>
    -->
    <DotNetCoreOnly Condition="'$(TRAVIS)'=='true'">1</DotNetCoreOnly>
    <DotNetCoreOnly Condition="'$(TRAVIS)'==''"></DotNetCoreOnly>
    <DoSourceLink></DoSourceLink>

    <!-- Version and Informational reflect actual version -->
    <Version>$(CurrentVersion)</Version>
    <InformationalVersion>$(CurrentVersion)</InformationalVersion>
    <!-- Assembly version is sticky to MAJOR.0.0.0 to avoid binding redirects because we strong name our assemblies -->
    <AssemblyVersion>$(CurrentAssemblyVersion)</AssemblyVersion>
    <!-- File version reflects actual version number without prelease since that not allowed in its struct -->
    <FileVersion>$(CurrentAssemblyFileVersion)</FileVersion>

    <SignAssembly Condition="'$(DotNetCoreOnly)'==''">true</SignAssembly>
    <AssemblyOriginatorKeyFile Condition="'$(DotNetCoreOnly)'==''">..\..\build\keys\keypair.snk</AssemblyOriginatorKeyFile>
    <GenerateDocumentationFile Condition="'$(DotNetCoreOnly)'==''">true</GenerateDocumentationFile>
    <NoWarn>1591,1572,1571,1573,1587,1570</NoWarn>
    <Prefer32Bit>false</Prefer32Bit>
    <DefineConstants Condition="'$(TargetFramework)'=='netstandard1.3' OR '$(DotNetCoreOnly)'=='1'">$(DefineConstants);DOTNETCORE</DefineConstants>
    <DebugType Condition="'$(DotNetCoreOnly)'==''">embedded</DebugType>
    <SourceLink Condition="'$(DoSourceLink)'!=''">$(BaseIntermediateOutputPath)\sl-$(MsBuildProjectName)-$(TargetFramework).json</SourceLink>
    <RepoUri>https://raw.githubusercontent.com/elastic/elasticsearch-net</RepoUri>
  </PropertyGroup>

  <Target Name="GenerateSourceLink" BeforeTargets="CoreCompile" Condition="'$(DoSourceLink)'!=''">
    <Delete Files="$(SourceLink)" Condition="Exists('$(SourceLink)')" />
    <Exec Command="git rev-parse HEAD" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="LatestCommit" />
    </Exec>
    <Exec Command="git rev-parse --show-toplevel" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitRootFolder" />
    </Exec>
    <WriteLinesToFile File="$(SourceLink)" Lines="{&quot;documents&quot;: { &quot;$([System.IO.Path]::GetFullPath('$(GitRootFolder)/').Replace('\','\\'))*&quot; : &quot;$(RepoUri)/$(LatestCommit)/*&quot; }}" />
  </Target>
</Project>
